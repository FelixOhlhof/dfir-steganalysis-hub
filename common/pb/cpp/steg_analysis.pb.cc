// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steg_analysis.proto
// Protobuf C++ Version: 5.28.2

#include "steg_analysis.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace steg_analysis {
              template <typename>
PROTOBUF_CONSTEXPR StegAnalysisRequest_ParamsEntry_DoNotUse::StegAnalysisRequest_ParamsEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : StegAnalysisRequest_ParamsEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : StegAnalysisRequest_ParamsEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct StegAnalysisRequest_ParamsEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StegAnalysisRequest_ParamsEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StegAnalysisRequest_ParamsEntry_DoNotUseDefaultTypeInternal() {}
  union {
    StegAnalysisRequest_ParamsEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StegAnalysisRequest_ParamsEntry_DoNotUseDefaultTypeInternal _StegAnalysisRequest_ParamsEntry_DoNotUse_default_instance_;

inline constexpr StegAnalysisRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : params_{},
        file_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exec_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        file_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StegAnalysisRequest::StegAnalysisRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StegAnalysisRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StegAnalysisRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StegAnalysisRequestDefaultTypeInternal() {}
  union {
    StegAnalysisRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StegAnalysisRequestDefaultTypeInternal _StegAnalysisRequest_default_instance_;

inline constexpr TaskResult::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        task_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        service_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        function_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        service_response_{nullptr},
        duration_ms_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR TaskResult::TaskResult(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TaskResultDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TaskResultDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TaskResultDefaultTypeInternal() {}
  union {
    TaskResult _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TaskResultDefaultTypeInternal _TaskResult_default_instance_;

inline constexpr StegAnalysisResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : task_results_{},
        error_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sha256_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_ms_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StegAnalysisResponse::StegAnalysisResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StegAnalysisResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StegAnalysisResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StegAnalysisResponseDefaultTypeInternal() {}
  union {
    StegAnalysisResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StegAnalysisResponseDefaultTypeInternal _StegAnalysisResponse_default_instance_;
}  // namespace steg_analysis
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_steg_5fanalysis_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_steg_5fanalysis_2eproto = nullptr;
const ::uint32_t
    TableStruct_steg_5fanalysis_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest_ParamsEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest, _impl_.file_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest, _impl_.params_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest, _impl_.exec_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisRequest, _impl_.file_name_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisResponse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisResponse, _impl_.task_results_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisResponse, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisResponse, _impl_.duration_ms_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::StegAnalysisResponse, _impl_.sha256_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.task_id_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.service_name_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.function_name_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.service_response_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.error_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::steg_analysis::TaskResult, _impl_.duration_ms_),
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 10, -1, sizeof(::steg_analysis::StegAnalysisRequest_ParamsEntry_DoNotUse)},
        {12, -1, -1, sizeof(::steg_analysis::StegAnalysisRequest)},
        {24, -1, -1, sizeof(::steg_analysis::StegAnalysisResponse)},
        {36, 51, -1, sizeof(::steg_analysis::TaskResult)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::steg_analysis::_StegAnalysisRequest_ParamsEntry_DoNotUse_default_instance_._instance,
    &::steg_analysis::_StegAnalysisRequest_default_instance_._instance,
    &::steg_analysis::_StegAnalysisResponse_default_instance_._instance,
    &::steg_analysis::_TaskResult_default_instance_._instance,
};
const char descriptor_table_protodef_steg_5fanalysis_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023steg_analysis.proto\022\rsteg_analysis\032\022st"
    "eg_service.proto\"\263\001\n\023StegAnalysisRequest"
    "\022\014\n\004file\030\001 \001(\014\022>\n\006params\030\002 \003(\0132..steg_an"
    "alysis.StegAnalysisRequest.ParamsEntry\022\014"
    "\n\004exec\030\003 \001(\t\022\021\n\tfile_name\030\004 \001(\t\032-\n\013Param"
    "sEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\t:\0028\001\"{"
    "\n\024StegAnalysisResponse\022/\n\014task_results\030\001"
    " \003(\0132\031.steg_analysis.TaskResult\022\r\n\005error"
    "\030\002 \001(\t\022\023\n\013duration_ms\030\003 \001(\003\022\016\n\006sha256\030\004 "
    "\001(\t\"\273\001\n\nTaskResult\022\017\n\007task_id\030\001 \001(\t\022\024\n\014s"
    "ervice_name\030\002 \001(\t\022\025\n\rfunction_name\030\003 \001(\t"
    "\022;\n\020service_response\030\004 \001(\0132!.steg_servic"
    "e.StegServiceResponse\022\r\n\005error\030\005 \001(\t\022\016\n\006"
    "status\030\006 \001(\t\022\023\n\013duration_ms\030\007 \001(\003*\250\001\n\006St"
    "atus\022\013\n\007SUCCESS\020\000\022\024\n\020OUT_OF_CONDITION\020\001\022"
    "\016\n\nGRPC_ERROR\020\002\022\024\n\020EXCEEDED_TIMEOUT\020\003\022\031\n"
    "\025FILE_TYPE_NOT_ALLOWED\020\004\022\025\n\021EXCEEDED_FIL"
    "ESIZE\020\005\022\021\n\rSERVICE_ERROR\020\006\022\020\n\014CLIENT_ERR"
    "OR\020\0072i\n\023StegAnalysisService\022R\n\007Execute\022\""
    ".steg_analysis.StegAnalysisRequest\032#.ste"
    "g_analysis.StegAnalysisResponseB\036\n\026stego"
    ".hub.grpc.wrapperZ\004./pbb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_steg_5fanalysis_2eproto_deps[1] =
    {
        &::descriptor_table_steg_5fservice_2eproto,
};
static ::absl::once_flag descriptor_table_steg_5fanalysis_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_steg_5fanalysis_2eproto = {
    false,
    false,
    871,
    descriptor_table_protodef_steg_5fanalysis_2eproto,
    "steg_analysis.proto",
    &descriptor_table_steg_5fanalysis_2eproto_once,
    descriptor_table_steg_5fanalysis_2eproto_deps,
    1,
    4,
    schemas,
    file_default_instances,
    TableStruct_steg_5fanalysis_2eproto::offsets,
    file_level_enum_descriptors_steg_5fanalysis_2eproto,
    file_level_service_descriptors_steg_5fanalysis_2eproto,
};
namespace steg_analysis {
const ::google::protobuf::EnumDescriptor* Status_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_steg_5fanalysis_2eproto);
  return file_level_enum_descriptors_steg_5fanalysis_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t Status_internal_data_[] = {
    524288u, 0u, };
bool Status_IsValid(int value) {
  return 0 <= value && value <= 7;
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              StegAnalysisRequest_ParamsEntry_DoNotUse::StegAnalysisRequest_ParamsEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              StegAnalysisRequest_ParamsEntry_DoNotUse::StegAnalysisRequest_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              StegAnalysisRequest_ParamsEntry_DoNotUse::StegAnalysisRequest_ParamsEntry_DoNotUse() : SuperType() {}
              StegAnalysisRequest_ParamsEntry_DoNotUse::StegAnalysisRequest_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::MessageLite::ClassDataFull
                  StegAnalysisRequest_ParamsEntry_DoNotUse::_class_data_ = {
                      ::google::protobuf::Message::ClassData{
                          &_StegAnalysisRequest_ParamsEntry_DoNotUse_default_instance_._instance,
                          &_table_.header,
                          nullptr,  // OnDemandRegisterArenaDtor
                          nullptr,  // IsInitialized
                          &StegAnalysisRequest_ParamsEntry_DoNotUse::MergeImpl,
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                          ::google::protobuf::Message::GetDeleteImpl<StegAnalysisRequest_ParamsEntry_DoNotUse>(),
                          ::google::protobuf::Message::GetNewImpl<StegAnalysisRequest_ParamsEntry_DoNotUse>(),
                          ::google::protobuf::Message::ClearImpl, ::google::protobuf::Message::ByteSizeLongImpl,
                              ::google::protobuf::Message::_InternalSerializeImpl,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                          PROTOBUF_FIELD_OFFSET(StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_._cached_size_),
                          false,
                      },
                      &StegAnalysisRequest_ParamsEntry_DoNotUse::kDescriptorMethods,
                      &descriptor_table_steg_5fanalysis_2eproto,
                      nullptr,  // tracker
              };
              const ::google::protobuf::MessageLite::ClassData* StegAnalysisRequest_ParamsEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 62, 2> StegAnalysisRequest_ParamsEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::steg_analysis::StegAnalysisRequest_ParamsEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string value = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 2;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisRequest_ParamsEntry_DoNotUse, _impl_.value_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\55\3\5\0\0\0\0\0"
    "steg_analysis.StegAnalysisRequest.ParamsEntry"
    "key"
    "value"
  }},
};

// ===================================================================

class StegAnalysisRequest::_Internal {
 public:
};

StegAnalysisRequest::StegAnalysisRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:steg_analysis.StegAnalysisRequest)
}
inline PROTOBUF_NDEBUG_INLINE StegAnalysisRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::steg_analysis::StegAnalysisRequest& from_msg)
      : params_{visibility, arena, from.params_},
        file_(arena, from.file_),
        exec_(arena, from.exec_),
        file_name_(arena, from.file_name_),
        _cached_size_{0} {}

StegAnalysisRequest::StegAnalysisRequest(
    ::google::protobuf::Arena* arena,
    const StegAnalysisRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StegAnalysisRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:steg_analysis.StegAnalysisRequest)
}
inline PROTOBUF_NDEBUG_INLINE StegAnalysisRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : params_{visibility, arena},
        file_(arena),
        exec_(arena),
        file_name_(arena),
        _cached_size_{0} {}

inline void StegAnalysisRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StegAnalysisRequest::~StegAnalysisRequest() {
  // @@protoc_insertion_point(destructor:steg_analysis.StegAnalysisRequest)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StegAnalysisRequest::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.file_.Destroy();
  _impl_.exec_.Destroy();
  _impl_.file_name_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StegAnalysisRequest::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StegAnalysisRequest_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StegAnalysisRequest::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StegAnalysisRequest>(),
            ::google::protobuf::Message::GetNewImpl<StegAnalysisRequest>(),
            ::google::protobuf::Message::GetClearImpl<StegAnalysisRequest>(), &StegAnalysisRequest::ByteSizeLong,
                &StegAnalysisRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_._cached_size_),
            false,
        },
        &StegAnalysisRequest::kDescriptorMethods,
        &descriptor_table_steg_5fanalysis_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StegAnalysisRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 61, 2> StegAnalysisRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::steg_analysis::StegAnalysisRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string file_name = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.file_name_)}},
    // bytes file = 1;
    {::_pbi::TcParser::FastBS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.file_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // string exec = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.exec_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bytes file = 1;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.file_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBytes | ::_fl::kRepAString)},
    // map<string, string> params = 2;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.params_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // string exec = 3;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.exec_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string file_name = 4;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisRequest, _impl_.file_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(StegAnalysisRequest()._impl_.params_)>(
        1, 0, 0, 9,
        9)},
  }}, {{
    "\41\0\6\4\11\0\0\0"
    "steg_analysis.StegAnalysisRequest"
    "params"
    "exec"
    "file_name"
  }},
};

PROTOBUF_NOINLINE void StegAnalysisRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:steg_analysis.StegAnalysisRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.params_.Clear();
  _impl_.file_.ClearToEmpty();
  _impl_.exec_.ClearToEmpty();
  _impl_.file_name_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StegAnalysisRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StegAnalysisRequest& this_ = static_cast<const StegAnalysisRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StegAnalysisRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StegAnalysisRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:steg_analysis.StegAnalysisRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // bytes file = 1;
          if (!this_._internal_file().empty()) {
            const std::string& _s = this_._internal_file();
            target = stream->WriteBytesMaybeAliased(1, _s, target);
          }

          // map<string, string> params = 2;
          if (!this_._internal_params().empty()) {
            using MapType = ::google::protobuf::Map<std::string, std::string>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, std::string,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_STRING>;
            const auto& field = this_._internal_params();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisRequest.params");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisRequest.params");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisRequest.params");
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.second.data(), static_cast<int>(entry.second.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisRequest.params");
              }
            }
          }

          // string exec = 3;
          if (!this_._internal_exec().empty()) {
            const std::string& _s = this_._internal_exec();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisRequest.exec");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string file_name = 4;
          if (!this_._internal_file_name().empty()) {
            const std::string& _s = this_._internal_file_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisRequest.file_name");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:steg_analysis.StegAnalysisRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StegAnalysisRequest::ByteSizeLong(const MessageLite& base) {
          const StegAnalysisRequest& this_ = static_cast<const StegAnalysisRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StegAnalysisRequest::ByteSizeLong() const {
          const StegAnalysisRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:steg_analysis.StegAnalysisRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // map<string, string> params = 2;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_params_size());
              for (const auto& entry : this_._internal_params()) {
                total_size += _pbi::MapEntryFuncs<std::string, std::string,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_STRING>::ByteSizeLong(entry.first, entry.second);
              }
            }
          }
           {
            // bytes file = 1;
            if (!this_._internal_file().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                              this_._internal_file());
            }
            // string exec = 3;
            if (!this_._internal_exec().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_exec());
            }
            // string file_name = 4;
            if (!this_._internal_file_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_file_name());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StegAnalysisRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StegAnalysisRequest*>(&to_msg);
  auto& from = static_cast<const StegAnalysisRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:steg_analysis.StegAnalysisRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.params_.MergeFrom(from._impl_.params_);
  if (!from._internal_file().empty()) {
    _this->_internal_set_file(from._internal_file());
  }
  if (!from._internal_exec().empty()) {
    _this->_internal_set_exec(from._internal_exec());
  }
  if (!from._internal_file_name().empty()) {
    _this->_internal_set_file_name(from._internal_file_name());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StegAnalysisRequest::CopyFrom(const StegAnalysisRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:steg_analysis.StegAnalysisRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StegAnalysisRequest::InternalSwap(StegAnalysisRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.params_.InternalSwap(&other->_impl_.params_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_, &other->_impl_.file_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exec_, &other->_impl_.exec_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.file_name_, &other->_impl_.file_name_, arena);
}

::google::protobuf::Metadata StegAnalysisRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StegAnalysisResponse::_Internal {
 public:
};

StegAnalysisResponse::StegAnalysisResponse(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:steg_analysis.StegAnalysisResponse)
}
inline PROTOBUF_NDEBUG_INLINE StegAnalysisResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::steg_analysis::StegAnalysisResponse& from_msg)
      : task_results_{visibility, arena, from.task_results_},
        error_(arena, from.error_),
        sha256_(arena, from.sha256_),
        _cached_size_{0} {}

StegAnalysisResponse::StegAnalysisResponse(
    ::google::protobuf::Arena* arena,
    const StegAnalysisResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StegAnalysisResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.duration_ms_ = from._impl_.duration_ms_;

  // @@protoc_insertion_point(copy_constructor:steg_analysis.StegAnalysisResponse)
}
inline PROTOBUF_NDEBUG_INLINE StegAnalysisResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : task_results_{visibility, arena},
        error_(arena),
        sha256_(arena),
        _cached_size_{0} {}

inline void StegAnalysisResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.duration_ms_ = {};
}
StegAnalysisResponse::~StegAnalysisResponse() {
  // @@protoc_insertion_point(destructor:steg_analysis.StegAnalysisResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StegAnalysisResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.error_.Destroy();
  _impl_.sha256_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StegAnalysisResponse::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StegAnalysisResponse_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StegAnalysisResponse::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StegAnalysisResponse>(),
            ::google::protobuf::Message::GetNewImpl<StegAnalysisResponse>(),
            ::google::protobuf::Message::GetClearImpl<StegAnalysisResponse>(), &StegAnalysisResponse::ByteSizeLong,
                &StegAnalysisResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_._cached_size_),
            false,
        },
        &StegAnalysisResponse::kDescriptorMethods,
        &descriptor_table_steg_5fanalysis_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StegAnalysisResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 54, 2> StegAnalysisResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::steg_analysis::StegAnalysisResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string sha256 = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.sha256_)}},
    // repeated .steg_analysis.TaskResult task_results = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.task_results_)}},
    // string error = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.error_)}},
    // int64 duration_ms = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StegAnalysisResponse, _impl_.duration_ms_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.duration_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .steg_analysis.TaskResult task_results = 1;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.task_results_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // string error = 2;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.error_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 duration_ms = 3;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.duration_ms_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // string sha256 = 4;
    {PROTOBUF_FIELD_OFFSET(StegAnalysisResponse, _impl_.sha256_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::steg_analysis::TaskResult>()},
  }}, {{
    "\42\0\5\0\6\0\0\0"
    "steg_analysis.StegAnalysisResponse"
    "error"
    "sha256"
  }},
};

PROTOBUF_NOINLINE void StegAnalysisResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:steg_analysis.StegAnalysisResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_results_.Clear();
  _impl_.error_.ClearToEmpty();
  _impl_.sha256_.ClearToEmpty();
  _impl_.duration_ms_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StegAnalysisResponse::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StegAnalysisResponse& this_ = static_cast<const StegAnalysisResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StegAnalysisResponse::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StegAnalysisResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:steg_analysis.StegAnalysisResponse)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .steg_analysis.TaskResult task_results = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_task_results_size());
               i < n; i++) {
            const auto& repfield = this_._internal_task_results().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // string error = 2;
          if (!this_._internal_error().empty()) {
            const std::string& _s = this_._internal_error();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisResponse.error");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // int64 duration_ms = 3;
          if (this_._internal_duration_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<3>(
                    stream, this_._internal_duration_ms(), target);
          }

          // string sha256 = 4;
          if (!this_._internal_sha256().empty()) {
            const std::string& _s = this_._internal_sha256();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.StegAnalysisResponse.sha256");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:steg_analysis.StegAnalysisResponse)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StegAnalysisResponse::ByteSizeLong(const MessageLite& base) {
          const StegAnalysisResponse& this_ = static_cast<const StegAnalysisResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StegAnalysisResponse::ByteSizeLong() const {
          const StegAnalysisResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:steg_analysis.StegAnalysisResponse)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .steg_analysis.TaskResult task_results = 1;
             {
              total_size += 1UL * this_._internal_task_results_size();
              for (const auto& msg : this_._internal_task_results()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string error = 2;
            if (!this_._internal_error().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error());
            }
            // string sha256 = 4;
            if (!this_._internal_sha256().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_sha256());
            }
            // int64 duration_ms = 3;
            if (this_._internal_duration_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_duration_ms());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StegAnalysisResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StegAnalysisResponse*>(&to_msg);
  auto& from = static_cast<const StegAnalysisResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:steg_analysis.StegAnalysisResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_task_results()->MergeFrom(
      from._internal_task_results());
  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (!from._internal_sha256().empty()) {
    _this->_internal_set_sha256(from._internal_sha256());
  }
  if (from._internal_duration_ms() != 0) {
    _this->_impl_.duration_ms_ = from._impl_.duration_ms_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StegAnalysisResponse::CopyFrom(const StegAnalysisResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:steg_analysis.StegAnalysisResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StegAnalysisResponse::InternalSwap(StegAnalysisResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.task_results_.InternalSwap(&other->_impl_.task_results_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sha256_, &other->_impl_.sha256_, arena);
        swap(_impl_.duration_ms_, other->_impl_.duration_ms_);
}

::google::protobuf::Metadata StegAnalysisResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TaskResult::_Internal {
 public:
  using HasBits =
      decltype(std::declval<TaskResult>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._has_bits_);
};

void TaskResult::clear_service_response() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.service_response_ != nullptr) _impl_.service_response_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
TaskResult::TaskResult(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:steg_analysis.TaskResult)
}
inline PROTOBUF_NDEBUG_INLINE TaskResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::steg_analysis::TaskResult& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        task_id_(arena, from.task_id_),
        service_name_(arena, from.service_name_),
        function_name_(arena, from.function_name_),
        error_(arena, from.error_),
        status_(arena, from.status_) {}

TaskResult::TaskResult(
    ::google::protobuf::Arena* arena,
    const TaskResult& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TaskResult* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.service_response_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::steg_service::StegServiceResponse>(
                              arena, *from._impl_.service_response_)
                        : nullptr;
  _impl_.duration_ms_ = from._impl_.duration_ms_;

  // @@protoc_insertion_point(copy_constructor:steg_analysis.TaskResult)
}
inline PROTOBUF_NDEBUG_INLINE TaskResult::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        task_id_(arena),
        service_name_(arena),
        function_name_(arena),
        error_(arena),
        status_(arena) {}

inline void TaskResult::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, service_response_),
           0,
           offsetof(Impl_, duration_ms_) -
               offsetof(Impl_, service_response_) +
               sizeof(Impl_::duration_ms_));
}
TaskResult::~TaskResult() {
  // @@protoc_insertion_point(destructor:steg_analysis.TaskResult)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TaskResult::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.task_id_.Destroy();
  _impl_.service_name_.Destroy();
  _impl_.function_name_.Destroy();
  _impl_.error_.Destroy();
  _impl_.status_.Destroy();
  delete _impl_.service_response_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TaskResult::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TaskResult_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TaskResult::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TaskResult>(),
            ::google::protobuf::Message::GetNewImpl<TaskResult>(),
            ::google::protobuf::Message::GetClearImpl<TaskResult>(), &TaskResult::ByteSizeLong,
                &TaskResult::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._cached_size_),
            false,
        },
        &TaskResult::kDescriptorMethods,
        &descriptor_table_steg_5fanalysis_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TaskResult::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 1, 76, 2> TaskResult::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TaskResult, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::steg_analysis::TaskResult>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string task_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.task_id_)}},
    // string service_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.service_name_)}},
    // string function_name = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.function_name_)}},
    // .steg_service.StegServiceResponse service_response = 4;
    {::_pbi::TcParser::FastMtS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.service_response_)}},
    // string error = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.error_)}},
    // string status = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.status_)}},
    // int64 duration_ms = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(TaskResult, _impl_.duration_ms_), 63>(),
     {56, 63, 0, PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.duration_ms_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string task_id = 1;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.task_id_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string service_name = 2;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.service_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string function_name = 3;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.function_name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .steg_service.StegServiceResponse service_response = 4;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.service_response_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // string error = 5;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.error_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string status = 6;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.status_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 duration_ms = 7;
    {PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.duration_ms_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }}, {{
    {::_pbi::TcParser::GetTable<::steg_service::StegServiceResponse>()},
  }}, {{
    "\30\7\14\15\0\5\6\0"
    "steg_analysis.TaskResult"
    "task_id"
    "service_name"
    "function_name"
    "error"
    "status"
  }},
};

PROTOBUF_NOINLINE void TaskResult::Clear() {
// @@protoc_insertion_point(message_clear_start:steg_analysis.TaskResult)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.task_id_.ClearToEmpty();
  _impl_.service_name_.ClearToEmpty();
  _impl_.function_name_.ClearToEmpty();
  _impl_.error_.ClearToEmpty();
  _impl_.status_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.service_response_ != nullptr);
    _impl_.service_response_->Clear();
  }
  _impl_.duration_ms_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TaskResult::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TaskResult& this_ = static_cast<const TaskResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TaskResult::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TaskResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:steg_analysis.TaskResult)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string task_id = 1;
          if (!this_._internal_task_id().empty()) {
            const std::string& _s = this_._internal_task_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.TaskResult.task_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string service_name = 2;
          if (!this_._internal_service_name().empty()) {
            const std::string& _s = this_._internal_service_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.TaskResult.service_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string function_name = 3;
          if (!this_._internal_function_name().empty()) {
            const std::string& _s = this_._internal_function_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.TaskResult.function_name");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .steg_service.StegServiceResponse service_response = 4;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                4, *this_._impl_.service_response_, this_._impl_.service_response_->GetCachedSize(), target,
                stream);
          }

          // string error = 5;
          if (!this_._internal_error().empty()) {
            const std::string& _s = this_._internal_error();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.TaskResult.error");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // string status = 6;
          if (!this_._internal_status().empty()) {
            const std::string& _s = this_._internal_status();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "steg_analysis.TaskResult.status");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // int64 duration_ms = 7;
          if (this_._internal_duration_ms() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt64ToArrayWithField<7>(
                    stream, this_._internal_duration_ms(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:steg_analysis.TaskResult)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TaskResult::ByteSizeLong(const MessageLite& base) {
          const TaskResult& this_ = static_cast<const TaskResult&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TaskResult::ByteSizeLong() const {
          const TaskResult& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:steg_analysis.TaskResult)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string task_id = 1;
            if (!this_._internal_task_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_task_id());
            }
            // string service_name = 2;
            if (!this_._internal_service_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_service_name());
            }
            // string function_name = 3;
            if (!this_._internal_function_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_function_name());
            }
            // string error = 5;
            if (!this_._internal_error().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_error());
            }
            // string status = 6;
            if (!this_._internal_status().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_status());
            }
          }
           {
            // .steg_service.StegServiceResponse service_response = 4;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.service_response_);
            }
          }
           {
            // int64 duration_ms = 7;
            if (this_._internal_duration_ms() != 0) {
              total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
                  this_._internal_duration_ms());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TaskResult::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TaskResult*>(&to_msg);
  auto& from = static_cast<const TaskResult&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:steg_analysis.TaskResult)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_task_id().empty()) {
    _this->_internal_set_task_id(from._internal_task_id());
  }
  if (!from._internal_service_name().empty()) {
    _this->_internal_set_service_name(from._internal_service_name());
  }
  if (!from._internal_function_name().empty()) {
    _this->_internal_set_function_name(from._internal_function_name());
  }
  if (!from._internal_error().empty()) {
    _this->_internal_set_error(from._internal_error());
  }
  if (!from._internal_status().empty()) {
    _this->_internal_set_status(from._internal_status());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.service_response_ != nullptr);
    if (_this->_impl_.service_response_ == nullptr) {
      _this->_impl_.service_response_ =
          ::google::protobuf::Message::CopyConstruct<::steg_service::StegServiceResponse>(arena, *from._impl_.service_response_);
    } else {
      _this->_impl_.service_response_->MergeFrom(*from._impl_.service_response_);
    }
  }
  if (from._internal_duration_ms() != 0) {
    _this->_impl_.duration_ms_ = from._impl_.duration_ms_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TaskResult::CopyFrom(const TaskResult& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:steg_analysis.TaskResult)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TaskResult::InternalSwap(TaskResult* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.task_id_, &other->_impl_.task_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.service_name_, &other->_impl_.service_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.function_name_, &other->_impl_.function_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.error_, &other->_impl_.error_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.duration_ms_)
      + sizeof(TaskResult::_impl_.duration_ms_)
      - PROTOBUF_FIELD_OFFSET(TaskResult, _impl_.service_response_)>(
          reinterpret_cast<char*>(&_impl_.service_response_),
          reinterpret_cast<char*>(&other->_impl_.service_response_));
}

::google::protobuf::Metadata TaskResult::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace steg_analysis
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_steg_5fanalysis_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
