// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: steg_services.proto
// Protobuf C++ Version: 5.28.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_steg_5fservices_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_steg_5fservices_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5028002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/map.h"  // IWYU pragma: export
#include "google/protobuf/map_entry.h"
#include "google/protobuf/map_field_inl.h"
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_steg_5fservices_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_steg_5fservices_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_steg_5fservices_2eproto;
namespace steg_services {
class StegServiceAvailableParameter;
struct StegServiceAvailableParameterDefaultTypeInternal;
extern StegServiceAvailableParameterDefaultTypeInternal _StegServiceAvailableParameter_default_instance_;
class StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse;
struct StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUseDefaultTypeInternal;
extern StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUseDefaultTypeInternal _StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse_default_instance_;
class StegServiceRequest;
struct StegServiceRequestDefaultTypeInternal;
extern StegServiceRequestDefaultTypeInternal _StegServiceRequest_default_instance_;
class StegServiceRequest_ParamsEntry_DoNotUse;
struct StegServiceRequest_ParamsEntry_DoNotUseDefaultTypeInternal;
extern StegServiceRequest_ParamsEntry_DoNotUseDefaultTypeInternal _StegServiceRequest_ParamsEntry_DoNotUse_default_instance_;
class StegServiceResponse;
struct StegServiceResponseDefaultTypeInternal;
extern StegServiceResponseDefaultTypeInternal _StegServiceResponse_default_instance_;
class StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse;
struct StegServiceResponse_StegServiceReturnValuesEntry_DoNotUseDefaultTypeInternal;
extern StegServiceResponse_StegServiceReturnValuesEntry_DoNotUseDefaultTypeInternal _StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse_default_instance_;
class StegServiceReturnField;
struct StegServiceReturnFieldDefaultTypeInternal;
extern StegServiceReturnFieldDefaultTypeInternal _StegServiceReturnField_default_instance_;
class StegServiceReturnFields;
struct StegServiceReturnFieldsDefaultTypeInternal;
extern StegServiceReturnFieldsDefaultTypeInternal _StegServiceReturnFields_default_instance_;
}  // namespace steg_services
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace steg_services {

// ===================================================================


// -------------------------------------------------------------------

class StegServiceReturnField final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:steg_services.StegServiceReturnField) */ {
 public:
  inline StegServiceReturnField() : StegServiceReturnField(nullptr) {}
  ~StegServiceReturnField() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceReturnField(
      ::google::protobuf::internal::ConstantInitialized);

  inline StegServiceReturnField(const StegServiceReturnField& from) : StegServiceReturnField(nullptr, from) {}
  inline StegServiceReturnField(StegServiceReturnField&& from) noexcept
      : StegServiceReturnField(nullptr, std::move(from)) {}
  inline StegServiceReturnField& operator=(const StegServiceReturnField& from) {
    CopyFrom(from);
    return *this;
  }
  inline StegServiceReturnField& operator=(StegServiceReturnField&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StegServiceReturnField& default_instance() {
    return *internal_default_instance();
  }
  static inline const StegServiceReturnField* internal_default_instance() {
    return reinterpret_cast<const StegServiceReturnField*>(
        &_StegServiceReturnField_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(StegServiceReturnField& a, StegServiceReturnField& b) { a.Swap(&b); }
  inline void Swap(StegServiceReturnField* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StegServiceReturnField* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StegServiceReturnField* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StegServiceReturnField>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StegServiceReturnField& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StegServiceReturnField& from) { StegServiceReturnField::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StegServiceReturnField* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "steg_services.StegServiceReturnField"; }

 protected:
  explicit StegServiceReturnField(::google::protobuf::Arena* arena);
  StegServiceReturnField(::google::protobuf::Arena* arena, const StegServiceReturnField& from);
  StegServiceReturnField(::google::protobuf::Arena* arena, StegServiceReturnField&& from) noexcept
      : StegServiceReturnField(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kNameFieldNumber = 1,
    kLabelFieldNumber = 2,
    kIsVisibleFieldNumber = 3,
  };
  // string name = 1;
  void clear_name() ;
  const std::string& name() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_name(Arg_&& arg, Args_... args);
  std::string* mutable_name();
  PROTOBUF_NODISCARD std::string* release_name();
  void set_allocated_name(std::string* value);

  private:
  const std::string& _internal_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_name(
      const std::string& value);
  std::string* _internal_mutable_name();

  public:
  // string label = 2;
  void clear_label() ;
  const std::string& label() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_label(Arg_&& arg, Args_... args);
  std::string* mutable_label();
  PROTOBUF_NODISCARD std::string* release_label();
  void set_allocated_label(std::string* value);

  private:
  const std::string& _internal_label() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_label(
      const std::string& value);
  std::string* _internal_mutable_label();

  public:
  // bool isVisible = 3;
  void clear_isvisible() ;
  bool isvisible() const;
  void set_isvisible(bool value);

  private:
  bool _internal_isvisible() const;
  void _internal_set_isvisible(bool value);

  public:
  // @@protoc_insertion_point(class_scope:steg_services.StegServiceReturnField)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      54, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StegServiceReturnField_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StegServiceReturnField& from_msg);
    ::google::protobuf::internal::ArenaStringPtr name_;
    ::google::protobuf::internal::ArenaStringPtr label_;
    bool isvisible_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse*>(
        &_StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      79, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceRequest_ParamsEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StegServiceRequest_ParamsEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StegServiceRequest_ParamsEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  StegServiceRequest_ParamsEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceRequest_ParamsEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StegServiceRequest_ParamsEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StegServiceRequest_ParamsEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StegServiceRequest_ParamsEntry_DoNotUse*>(
        &_StegServiceRequest_ParamsEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      61, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse final
    : public ::google::protobuf::internal::MapEntry<
          StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse, std::string, std::string,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
          ::google::protobuf::internal::WireFormatLite::TYPE_STRING> {
 public:
  using SuperType = ::google::protobuf::internal::MapEntry<
      StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse, std::string, std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>;
  StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse();
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse(
      ::google::protobuf::internal::ConstantInitialized);
  explicit StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse(::google::protobuf::Arena* arena);
  static const StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse* internal_default_instance() {
    return reinterpret_cast<const StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse*>(
        &_StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse_default_instance_);
  }


 private:
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      86, 2>
      _table_;

  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceReturnFields final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:steg_services.StegServiceReturnFields) */ {
 public:
  inline StegServiceReturnFields() : StegServiceReturnFields(nullptr) {}
  ~StegServiceReturnFields() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceReturnFields(
      ::google::protobuf::internal::ConstantInitialized);

  inline StegServiceReturnFields(const StegServiceReturnFields& from) : StegServiceReturnFields(nullptr, from) {}
  inline StegServiceReturnFields(StegServiceReturnFields&& from) noexcept
      : StegServiceReturnFields(nullptr, std::move(from)) {}
  inline StegServiceReturnFields& operator=(const StegServiceReturnFields& from) {
    CopyFrom(from);
    return *this;
  }
  inline StegServiceReturnFields& operator=(StegServiceReturnFields&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StegServiceReturnFields& default_instance() {
    return *internal_default_instance();
  }
  static inline const StegServiceReturnFields* internal_default_instance() {
    return reinterpret_cast<const StegServiceReturnFields*>(
        &_StegServiceReturnFields_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(StegServiceReturnFields& a, StegServiceReturnFields& b) { a.Swap(&b); }
  inline void Swap(StegServiceReturnFields* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StegServiceReturnFields* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StegServiceReturnFields* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StegServiceReturnFields>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StegServiceReturnFields& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StegServiceReturnFields& from) { StegServiceReturnFields::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StegServiceReturnFields* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "steg_services.StegServiceReturnFields"; }

 protected:
  explicit StegServiceReturnFields(::google::protobuf::Arena* arena);
  StegServiceReturnFields(::google::protobuf::Arena* arena, const StegServiceReturnFields& from);
  StegServiceReturnFields(::google::protobuf::Arena* arena, StegServiceReturnFields&& from) noexcept
      : StegServiceReturnFields(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kReturnFieldsFieldNumber = 1,
  };
  // repeated .steg_services.StegServiceReturnField returnFields = 1;
  int returnfields_size() const;
  private:
  int _internal_returnfields_size() const;

  public:
  void clear_returnfields() ;
  ::steg_services::StegServiceReturnField* mutable_returnfields(int index);
  ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>* mutable_returnfields();

  private:
  const ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>& _internal_returnfields() const;
  ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>* _internal_mutable_returnfields();
  public:
  const ::steg_services::StegServiceReturnField& returnfields(int index) const;
  ::steg_services::StegServiceReturnField* add_returnfields();
  const ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>& returnfields() const;
  // @@protoc_insertion_point(class_scope:steg_services.StegServiceReturnFields)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StegServiceReturnFields_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StegServiceReturnFields& from_msg);
    ::google::protobuf::RepeatedPtrField< ::steg_services::StegServiceReturnField > returnfields_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:steg_services.StegServiceResponse) */ {
 public:
  inline StegServiceResponse() : StegServiceResponse(nullptr) {}
  ~StegServiceResponse() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline StegServiceResponse(const StegServiceResponse& from) : StegServiceResponse(nullptr, from) {}
  inline StegServiceResponse(StegServiceResponse&& from) noexcept
      : StegServiceResponse(nullptr, std::move(from)) {}
  inline StegServiceResponse& operator=(const StegServiceResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline StegServiceResponse& operator=(StegServiceResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StegServiceResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const StegServiceResponse* internal_default_instance() {
    return reinterpret_cast<const StegServiceResponse*>(
        &_StegServiceResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(StegServiceResponse& a, StegServiceResponse& b) { a.Swap(&b); }
  inline void Swap(StegServiceResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StegServiceResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StegServiceResponse* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StegServiceResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StegServiceResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StegServiceResponse& from) { StegServiceResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StegServiceResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "steg_services.StegServiceResponse"; }

 protected:
  explicit StegServiceResponse(::google::protobuf::Arena* arena);
  StegServiceResponse(::google::protobuf::Arena* arena, const StegServiceResponse& from);
  StegServiceResponse(::google::protobuf::Arena* arena, StegServiceResponse&& from) noexcept
      : StegServiceResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStegServiceReturnValuesFieldNumber = 1,
    kErrorFieldNumber = 2,
  };
  // map<string, string> stegServiceReturnValues = 1;
  int stegservicereturnvalues_size() const;
  private:
  int _internal_stegservicereturnvalues_size() const;

  public:
  void clear_stegservicereturnvalues() ;
  const ::google::protobuf::Map<std::string, std::string>& stegservicereturnvalues() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_stegservicereturnvalues();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_stegservicereturnvalues() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_stegservicereturnvalues();

  public:
  // string error = 2;
  void clear_error() ;
  const std::string& error() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_error(Arg_&& arg, Args_... args);
  std::string* mutable_error();
  PROTOBUF_NODISCARD std::string* release_error();
  void set_allocated_error(std::string* value);

  private:
  const std::string& _internal_error() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_error(
      const std::string& value);
  std::string* _internal_mutable_error();

  public:
  // @@protoc_insertion_point(class_scope:steg_services.StegServiceResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      70, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StegServiceResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StegServiceResponse& from_msg);
    ::google::protobuf::internal::MapField<StegServiceResponse_StegServiceReturnValuesEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        stegservicereturnvalues_;
    ::google::protobuf::internal::ArenaStringPtr error_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:steg_services.StegServiceRequest) */ {
 public:
  inline StegServiceRequest() : StegServiceRequest(nullptr) {}
  ~StegServiceRequest() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline StegServiceRequest(const StegServiceRequest& from) : StegServiceRequest(nullptr, from) {}
  inline StegServiceRequest(StegServiceRequest&& from) noexcept
      : StegServiceRequest(nullptr, std::move(from)) {}
  inline StegServiceRequest& operator=(const StegServiceRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline StegServiceRequest& operator=(StegServiceRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StegServiceRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const StegServiceRequest* internal_default_instance() {
    return reinterpret_cast<const StegServiceRequest*>(
        &_StegServiceRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StegServiceRequest& a, StegServiceRequest& b) { a.Swap(&b); }
  inline void Swap(StegServiceRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StegServiceRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StegServiceRequest* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StegServiceRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StegServiceRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StegServiceRequest& from) { StegServiceRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StegServiceRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "steg_services.StegServiceRequest"; }

 protected:
  explicit StegServiceRequest(::google::protobuf::Arena* arena);
  StegServiceRequest(::google::protobuf::Arena* arena, const StegServiceRequest& from);
  StegServiceRequest(::google::protobuf::Arena* arena, StegServiceRequest&& from) noexcept
      : StegServiceRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParamsFieldNumber = 2,
    kFileFieldNumber = 1,
  };
  // map<string, string> params = 2;
  int params_size() const;
  private:
  int _internal_params_size() const;

  public:
  void clear_params() ;
  const ::google::protobuf::Map<std::string, std::string>& params() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_params();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_params() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_params();

  public:
  // bytes file = 1;
  void clear_file() ;
  const std::string& file() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_file(Arg_&& arg, Args_... args);
  std::string* mutable_file();
  PROTOBUF_NODISCARD std::string* release_file();
  void set_allocated_file(std::string* value);

  private:
  const std::string& _internal_file() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_file(
      const std::string& value);
  std::string* _internal_mutable_file();

  public:
  // @@protoc_insertion_point(class_scope:steg_services.StegServiceRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 2, 1,
      47, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StegServiceRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StegServiceRequest& from_msg);
    ::google::protobuf::internal::MapField<StegServiceRequest_ParamsEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        params_;
    ::google::protobuf::internal::ArenaStringPtr file_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steg_5fservices_2eproto;
};
// -------------------------------------------------------------------

class StegServiceAvailableParameter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:steg_services.StegServiceAvailableParameter) */ {
 public:
  inline StegServiceAvailableParameter() : StegServiceAvailableParameter(nullptr) {}
  ~StegServiceAvailableParameter() PROTOBUF_FINAL;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StegServiceAvailableParameter(
      ::google::protobuf::internal::ConstantInitialized);

  inline StegServiceAvailableParameter(const StegServiceAvailableParameter& from) : StegServiceAvailableParameter(nullptr, from) {}
  inline StegServiceAvailableParameter(StegServiceAvailableParameter&& from) noexcept
      : StegServiceAvailableParameter(nullptr, std::move(from)) {}
  inline StegServiceAvailableParameter& operator=(const StegServiceAvailableParameter& from) {
    CopyFrom(from);
    return *this;
  }
  inline StegServiceAvailableParameter& operator=(StegServiceAvailableParameter&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StegServiceAvailableParameter& default_instance() {
    return *internal_default_instance();
  }
  static inline const StegServiceAvailableParameter* internal_default_instance() {
    return reinterpret_cast<const StegServiceAvailableParameter*>(
        &_StegServiceAvailableParameter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(StegServiceAvailableParameter& a, StegServiceAvailableParameter& b) { a.Swap(&b); }
  inline void Swap(StegServiceAvailableParameter* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StegServiceAvailableParameter* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StegServiceAvailableParameter* New(::google::protobuf::Arena* arena = nullptr) const PROTOBUF_FINAL {
    return ::google::protobuf::Message::DefaultConstruct<StegServiceAvailableParameter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const StegServiceAvailableParameter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const StegServiceAvailableParameter& from) { StegServiceAvailableParameter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(StegServiceAvailableParameter* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "steg_services.StegServiceAvailableParameter"; }

 protected:
  explicit StegServiceAvailableParameter(::google::protobuf::Arena* arena);
  StegServiceAvailableParameter(::google::protobuf::Arena* arena, const StegServiceAvailableParameter& from);
  StegServiceAvailableParameter(::google::protobuf::Arena* arena, StegServiceAvailableParameter&& from) noexcept
      : StegServiceAvailableParameter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const PROTOBUF_FINAL;
  static const ::google::protobuf::Message::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kParameterDescriptionFieldNumber = 1,
  };
  // map<string, string> parameterDescription = 1;
  int parameterdescription_size() const;
  private:
  int _internal_parameterdescription_size() const;

  public:
  void clear_parameterdescription() ;
  const ::google::protobuf::Map<std::string, std::string>& parameterdescription() const;
  ::google::protobuf::Map<std::string, std::string>* mutable_parameterdescription();

  private:
  const ::google::protobuf::Map<std::string, std::string>& _internal_parameterdescription() const;
  ::google::protobuf::Map<std::string, std::string>* _internal_mutable_parameterdescription();

  public:
  // @@protoc_insertion_point(class_scope:steg_services.StegServiceAvailableParameter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      72, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_StegServiceAvailableParameter_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const StegServiceAvailableParameter& from_msg);
    ::google::protobuf::internal::MapField<StegServiceAvailableParameter_ParameterDescriptionEntry_DoNotUse, std::string, std::string,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                      ::google::protobuf::internal::WireFormatLite::TYPE_STRING>
        parameterdescription_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_steg_5fservices_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StegServiceRequest

// bytes file = 1;
inline void StegServiceRequest::clear_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.ClearToEmpty();
}
inline const std::string& StegServiceRequest::file() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:steg_services.StegServiceRequest.file)
  return _internal_file();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StegServiceRequest::set_file(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.SetBytes(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:steg_services.StegServiceRequest.file)
}
inline std::string* StegServiceRequest::mutable_file() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_file();
  // @@protoc_insertion_point(field_mutable:steg_services.StegServiceRequest.file)
  return _s;
}
inline const std::string& StegServiceRequest::_internal_file() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.file_.Get();
}
inline void StegServiceRequest::_internal_set_file(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.Set(value, GetArena());
}
inline std::string* StegServiceRequest::_internal_mutable_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.file_.Mutable( GetArena());
}
inline std::string* StegServiceRequest::release_file() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:steg_services.StegServiceRequest.file)
  return _impl_.file_.Release();
}
inline void StegServiceRequest::set_allocated_file(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.file_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.file_.IsDefault()) {
          _impl_.file_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:steg_services.StegServiceRequest.file)
}

// map<string, string> params = 2;
inline int StegServiceRequest::_internal_params_size() const {
  return _internal_params().size();
}
inline int StegServiceRequest::params_size() const {
  return _internal_params_size();
}
inline void StegServiceRequest::clear_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.params_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& StegServiceRequest::_internal_params() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.params_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& StegServiceRequest::params() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:steg_services.StegServiceRequest.params)
  return _internal_params();
}
inline ::google::protobuf::Map<std::string, std::string>* StegServiceRequest::_internal_mutable_params() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.params_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* StegServiceRequest::mutable_params() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:steg_services.StegServiceRequest.params)
  return _internal_mutable_params();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StegServiceResponse

// map<string, string> stegServiceReturnValues = 1;
inline int StegServiceResponse::_internal_stegservicereturnvalues_size() const {
  return _internal_stegservicereturnvalues().size();
}
inline int StegServiceResponse::stegservicereturnvalues_size() const {
  return _internal_stegservicereturnvalues_size();
}
inline void StegServiceResponse::clear_stegservicereturnvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.stegservicereturnvalues_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& StegServiceResponse::_internal_stegservicereturnvalues() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.stegservicereturnvalues_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& StegServiceResponse::stegservicereturnvalues() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:steg_services.StegServiceResponse.stegServiceReturnValues)
  return _internal_stegservicereturnvalues();
}
inline ::google::protobuf::Map<std::string, std::string>* StegServiceResponse::_internal_mutable_stegservicereturnvalues() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.stegservicereturnvalues_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* StegServiceResponse::mutable_stegservicereturnvalues() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:steg_services.StegServiceResponse.stegServiceReturnValues)
  return _internal_mutable_stegservicereturnvalues();
}

// string error = 2;
inline void StegServiceResponse::clear_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.ClearToEmpty();
}
inline const std::string& StegServiceResponse::error() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:steg_services.StegServiceResponse.error)
  return _internal_error();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StegServiceResponse::set_error(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:steg_services.StegServiceResponse.error)
}
inline std::string* StegServiceResponse::mutable_error() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_error();
  // @@protoc_insertion_point(field_mutable:steg_services.StegServiceResponse.error)
  return _s;
}
inline const std::string& StegServiceResponse::_internal_error() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.error_.Get();
}
inline void StegServiceResponse::_internal_set_error(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.Set(value, GetArena());
}
inline std::string* StegServiceResponse::_internal_mutable_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.error_.Mutable( GetArena());
}
inline std::string* StegServiceResponse::release_error() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:steg_services.StegServiceResponse.error)
  return _impl_.error_.Release();
}
inline void StegServiceResponse::set_allocated_error(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.error_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.error_.IsDefault()) {
          _impl_.error_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:steg_services.StegServiceResponse.error)
}

// -------------------------------------------------------------------

// StegServiceReturnField

// string name = 1;
inline void StegServiceReturnField::clear_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.ClearToEmpty();
}
inline const std::string& StegServiceReturnField::name() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:steg_services.StegServiceReturnField.name)
  return _internal_name();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StegServiceReturnField::set_name(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:steg_services.StegServiceReturnField.name)
}
inline std::string* StegServiceReturnField::mutable_name() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_name();
  // @@protoc_insertion_point(field_mutable:steg_services.StegServiceReturnField.name)
  return _s;
}
inline const std::string& StegServiceReturnField::_internal_name() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.name_.Get();
}
inline void StegServiceReturnField::_internal_set_name(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.Set(value, GetArena());
}
inline std::string* StegServiceReturnField::_internal_mutable_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.name_.Mutable( GetArena());
}
inline std::string* StegServiceReturnField::release_name() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:steg_services.StegServiceReturnField.name)
  return _impl_.name_.Release();
}
inline void StegServiceReturnField::set_allocated_name(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.name_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.name_.IsDefault()) {
          _impl_.name_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:steg_services.StegServiceReturnField.name)
}

// string label = 2;
inline void StegServiceReturnField::clear_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.ClearToEmpty();
}
inline const std::string& StegServiceReturnField::label() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:steg_services.StegServiceReturnField.label)
  return _internal_label();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void StegServiceReturnField::set_label(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:steg_services.StegServiceReturnField.label)
}
inline std::string* StegServiceReturnField::mutable_label() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_label();
  // @@protoc_insertion_point(field_mutable:steg_services.StegServiceReturnField.label)
  return _s;
}
inline const std::string& StegServiceReturnField::_internal_label() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.label_.Get();
}
inline void StegServiceReturnField::_internal_set_label(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.Set(value, GetArena());
}
inline std::string* StegServiceReturnField::_internal_mutable_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.label_.Mutable( GetArena());
}
inline std::string* StegServiceReturnField::release_label() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:steg_services.StegServiceReturnField.label)
  return _impl_.label_.Release();
}
inline void StegServiceReturnField::set_allocated_label(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.label_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.label_.IsDefault()) {
          _impl_.label_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:steg_services.StegServiceReturnField.label)
}

// bool isVisible = 3;
inline void StegServiceReturnField::clear_isvisible() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isvisible_ = false;
}
inline bool StegServiceReturnField::isvisible() const {
  // @@protoc_insertion_point(field_get:steg_services.StegServiceReturnField.isVisible)
  return _internal_isvisible();
}
inline void StegServiceReturnField::set_isvisible(bool value) {
  _internal_set_isvisible(value);
  // @@protoc_insertion_point(field_set:steg_services.StegServiceReturnField.isVisible)
}
inline bool StegServiceReturnField::_internal_isvisible() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.isvisible_;
}
inline void StegServiceReturnField::_internal_set_isvisible(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.isvisible_ = value;
}

// -------------------------------------------------------------------

// StegServiceReturnFields

// repeated .steg_services.StegServiceReturnField returnFields = 1;
inline int StegServiceReturnFields::_internal_returnfields_size() const {
  return _internal_returnfields().size();
}
inline int StegServiceReturnFields::returnfields_size() const {
  return _internal_returnfields_size();
}
inline void StegServiceReturnFields::clear_returnfields() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.returnfields_.Clear();
}
inline ::steg_services::StegServiceReturnField* StegServiceReturnFields::mutable_returnfields(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:steg_services.StegServiceReturnFields.returnFields)
  return _internal_mutable_returnfields()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>* StegServiceReturnFields::mutable_returnfields()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:steg_services.StegServiceReturnFields.returnFields)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_returnfields();
}
inline const ::steg_services::StegServiceReturnField& StegServiceReturnFields::returnfields(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:steg_services.StegServiceReturnFields.returnFields)
  return _internal_returnfields().Get(index);
}
inline ::steg_services::StegServiceReturnField* StegServiceReturnFields::add_returnfields() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::steg_services::StegServiceReturnField* _add = _internal_mutable_returnfields()->Add();
  // @@protoc_insertion_point(field_add:steg_services.StegServiceReturnFields.returnFields)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>& StegServiceReturnFields::returnfields() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:steg_services.StegServiceReturnFields.returnFields)
  return _internal_returnfields();
}
inline const ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>&
StegServiceReturnFields::_internal_returnfields() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.returnfields_;
}
inline ::google::protobuf::RepeatedPtrField<::steg_services::StegServiceReturnField>*
StegServiceReturnFields::_internal_mutable_returnfields() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.returnfields_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// StegServiceAvailableParameter

// map<string, string> parameterDescription = 1;
inline int StegServiceAvailableParameter::_internal_parameterdescription_size() const {
  return _internal_parameterdescription().size();
}
inline int StegServiceAvailableParameter::parameterdescription_size() const {
  return _internal_parameterdescription_size();
}
inline void StegServiceAvailableParameter::clear_parameterdescription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parameterdescription_.Clear();
}
inline const ::google::protobuf::Map<std::string, std::string>& StegServiceAvailableParameter::_internal_parameterdescription() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parameterdescription_.GetMap();
}
inline const ::google::protobuf::Map<std::string, std::string>& StegServiceAvailableParameter::parameterdescription() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_map:steg_services.StegServiceAvailableParameter.parameterDescription)
  return _internal_parameterdescription();
}
inline ::google::protobuf::Map<std::string, std::string>* StegServiceAvailableParameter::_internal_mutable_parameterdescription() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.parameterdescription_.MutableMap();
}
inline ::google::protobuf::Map<std::string, std::string>* StegServiceAvailableParameter::mutable_parameterdescription() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_map:steg_services.StegServiceAvailableParameter.parameterDescription)
  return _internal_mutable_parameterdescription();
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace steg_services


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_steg_5fservices_2eproto_2epb_2eh
